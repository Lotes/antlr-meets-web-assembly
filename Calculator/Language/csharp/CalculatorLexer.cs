//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Calculator.antlr4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class CalculatorLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		COS=1, SIN=2, TAN=3, ACOS=4, ASIN=5, ATAN=6, LN=7, LOG=8, SQRT=9, LPAREN=10, 
		RPAREN=11, PLUS=12, MINUS=13, TIMES=14, DIV=15, COMMA=16, POINT=17, POW=18, 
		SCIENTIFIC_NUMBER=19, WS=20;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"COS", "SIN", "TAN", "ACOS", "ASIN", "ATAN", "LN", "LOG", "SQRT", "LPAREN", 
		"RPAREN", "PLUS", "MINUS", "TIMES", "DIV", "COMMA", "POINT", "POW", "SCIENTIFIC_NUMBER", 
		"NUMBER", "E1", "E2", "SIGN", "WS"
	};


	public CalculatorLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CalculatorLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'cos'", "'sin'", "'tan'", "'acos'", "'asin'", "'atan'", "'ln'", 
		"'log'", "'sqrt'", "'('", "')'", "'+'", "'-'", "'*'", "'/'", "','", "'.'", 
		"'^'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "COS", "SIN", "TAN", "ACOS", "ASIN", "ATAN", "LN", "LOG", "SQRT", 
		"LPAREN", "RPAREN", "PLUS", "MINUS", "TIMES", "DIV", "COMMA", "POINT", 
		"POW", "SCIENTIFIC_NUMBER", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Calculator.antlr4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CalculatorLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x16', '\x92', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', 
		'\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x5', '\x14', 'p', '\n', '\x14', '\x3', '\x14', '\x5', '\x14', 's', '\n', 
		'\x14', '\x3', '\x14', '\x3', '\x14', '\x5', '\x14', 'w', '\n', '\x14', 
		'\x3', '\x15', '\x6', '\x15', 'z', '\n', '\x15', '\r', '\x15', '\xE', 
		'\x15', '{', '\x3', '\x15', '\x3', '\x15', '\x6', '\x15', '\x80', '\n', 
		'\x15', '\r', '\x15', '\xE', '\x15', '\x81', '\x5', '\x15', '\x84', '\n', 
		'\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', 
		'\x18', '\x3', '\x18', '\x3', '\x19', '\x6', '\x19', '\x8D', '\n', '\x19', 
		'\r', '\x19', '\xE', '\x19', '\x8E', '\x3', '\x19', '\x3', '\x19', '\x2', 
		'\x2', '\x1A', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', 
		'\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', 
		'\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', 
		'!', '\x12', '#', '\x13', '%', '\x14', '\'', '\x15', ')', '\x2', '+', 
		'\x2', '-', '\x2', '/', '\x2', '\x31', '\x16', '\x3', '\x2', '\x4', '\x4', 
		'\x2', '-', '-', '/', '/', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', 
		'\"', '\x2', '\x94', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x3', '\x33', 
		'\x3', '\x2', '\x2', '\x2', '\x5', '\x37', '\x3', '\x2', '\x2', '\x2', 
		'\a', ';', '\x3', '\x2', '\x2', '\x2', '\t', '?', '\x3', '\x2', '\x2', 
		'\x2', '\v', '\x44', '\x3', '\x2', '\x2', '\x2', '\r', 'I', '\x3', '\x2', 
		'\x2', '\x2', '\xF', 'N', '\x3', '\x2', '\x2', '\x2', '\x11', 'Q', '\x3', 
		'\x2', '\x2', '\x2', '\x13', 'U', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'Z', '\x3', '\x2', '\x2', '\x2', '\x17', '\\', '\x3', '\x2', '\x2', '\x2', 
		'\x19', '^', '\x3', '\x2', '\x2', '\x2', '\x1B', '`', '\x3', '\x2', '\x2', 
		'\x2', '\x1D', '\x62', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x64', '\x3', 
		'\x2', '\x2', '\x2', '!', '\x66', '\x3', '\x2', '\x2', '\x2', '#', 'h', 
		'\x3', '\x2', '\x2', '\x2', '%', 'j', '\x3', '\x2', '\x2', '\x2', '\'', 
		'l', '\x3', '\x2', '\x2', '\x2', ')', 'y', '\x3', '\x2', '\x2', '\x2', 
		'+', '\x85', '\x3', '\x2', '\x2', '\x2', '-', '\x87', '\x3', '\x2', '\x2', 
		'\x2', '/', '\x89', '\x3', '\x2', '\x2', '\x2', '\x31', '\x8C', '\x3', 
		'\x2', '\x2', '\x2', '\x33', '\x34', '\a', '\x65', '\x2', '\x2', '\x34', 
		'\x35', '\a', 'q', '\x2', '\x2', '\x35', '\x36', '\a', 'u', '\x2', '\x2', 
		'\x36', '\x4', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\a', 'u', 
		'\x2', '\x2', '\x38', '\x39', '\a', 'k', '\x2', '\x2', '\x39', ':', '\a', 
		'p', '\x2', '\x2', ':', '\x6', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', 
		'v', '\x2', '\x2', '<', '=', '\a', '\x63', '\x2', '\x2', '=', '>', '\a', 
		'p', '\x2', '\x2', '>', '\b', '\x3', '\x2', '\x2', '\x2', '?', '@', '\a', 
		'\x63', '\x2', '\x2', '@', '\x41', '\a', '\x65', '\x2', '\x2', '\x41', 
		'\x42', '\a', 'q', '\x2', '\x2', '\x42', '\x43', '\a', 'u', '\x2', '\x2', 
		'\x43', '\n', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\a', '\x63', 
		'\x2', '\x2', '\x45', '\x46', '\a', 'u', '\x2', '\x2', '\x46', 'G', '\a', 
		'k', '\x2', '\x2', 'G', 'H', '\a', 'p', '\x2', '\x2', 'H', '\f', '\x3', 
		'\x2', '\x2', '\x2', 'I', 'J', '\a', '\x63', '\x2', '\x2', 'J', 'K', '\a', 
		'v', '\x2', '\x2', 'K', 'L', '\a', '\x63', '\x2', '\x2', 'L', 'M', '\a', 
		'p', '\x2', '\x2', 'M', '\xE', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\a', 
		'n', '\x2', '\x2', 'O', 'P', '\a', 'p', '\x2', '\x2', 'P', '\x10', '\x3', 
		'\x2', '\x2', '\x2', 'Q', 'R', '\a', 'n', '\x2', '\x2', 'R', 'S', '\a', 
		'q', '\x2', '\x2', 'S', 'T', '\a', 'i', '\x2', '\x2', 'T', '\x12', '\x3', 
		'\x2', '\x2', '\x2', 'U', 'V', '\a', 'u', '\x2', '\x2', 'V', 'W', '\a', 
		's', '\x2', '\x2', 'W', 'X', '\a', 't', '\x2', '\x2', 'X', 'Y', '\a', 
		'v', '\x2', '\x2', 'Y', '\x14', '\x3', '\x2', '\x2', '\x2', 'Z', '[', 
		'\a', '*', '\x2', '\x2', '[', '\x16', '\x3', '\x2', '\x2', '\x2', '\\', 
		']', '\a', '+', '\x2', '\x2', ']', '\x18', '\x3', '\x2', '\x2', '\x2', 
		'^', '_', '\a', '-', '\x2', '\x2', '_', '\x1A', '\x3', '\x2', '\x2', '\x2', 
		'`', '\x61', '\a', '/', '\x2', '\x2', '\x61', '\x1C', '\x3', '\x2', '\x2', 
		'\x2', '\x62', '\x63', '\a', ',', '\x2', '\x2', '\x63', '\x1E', '\x3', 
		'\x2', '\x2', '\x2', '\x64', '\x65', '\a', '\x31', '\x2', '\x2', '\x65', 
		' ', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', '\a', '.', '\x2', '\x2', 
		'g', '\"', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\a', '\x30', '\x2', 
		'\x2', 'i', '$', '\x3', '\x2', '\x2', '\x2', 'j', 'k', '\a', '`', '\x2', 
		'\x2', 'k', '&', '\x3', '\x2', '\x2', '\x2', 'l', 'v', '\x5', ')', '\x15', 
		'\x2', 'm', 'p', '\x5', '+', '\x16', '\x2', 'n', 'p', '\x5', '-', '\x17', 
		'\x2', 'o', 'm', '\x3', '\x2', '\x2', '\x2', 'o', 'n', '\x3', '\x2', '\x2', 
		'\x2', 'p', 'r', '\x3', '\x2', '\x2', '\x2', 'q', 's', '\x5', '/', '\x18', 
		'\x2', 'r', 'q', '\x3', '\x2', '\x2', '\x2', 'r', 's', '\x3', '\x2', '\x2', 
		'\x2', 's', 't', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\x5', ')', '\x15', 
		'\x2', 'u', 'w', '\x3', '\x2', '\x2', '\x2', 'v', 'o', '\x3', '\x2', '\x2', 
		'\x2', 'v', 'w', '\x3', '\x2', '\x2', '\x2', 'w', '(', '\x3', '\x2', '\x2', 
		'\x2', 'x', 'z', '\x4', '\x32', ';', '\x2', 'y', 'x', '\x3', '\x2', '\x2', 
		'\x2', 'z', '{', '\x3', '\x2', '\x2', '\x2', '{', 'y', '\x3', '\x2', '\x2', 
		'\x2', '{', '|', '\x3', '\x2', '\x2', '\x2', '|', '\x83', '\x3', '\x2', 
		'\x2', '\x2', '}', '\x7F', '\a', '\x30', '\x2', '\x2', '~', '\x80', '\x4', 
		'\x32', ';', '\x2', '\x7F', '~', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', 
		'\x3', '\x2', '\x2', '\x2', '\x81', '\x7F', '\x3', '\x2', '\x2', '\x2', 
		'\x81', '\x82', '\x3', '\x2', '\x2', '\x2', '\x82', '\x84', '\x3', '\x2', 
		'\x2', '\x2', '\x83', '}', '\x3', '\x2', '\x2', '\x2', '\x83', '\x84', 
		'\x3', '\x2', '\x2', '\x2', '\x84', '*', '\x3', '\x2', '\x2', '\x2', '\x85', 
		'\x86', '\a', 'G', '\x2', '\x2', '\x86', ',', '\x3', '\x2', '\x2', '\x2', 
		'\x87', '\x88', '\a', 'g', '\x2', '\x2', '\x88', '.', '\x3', '\x2', '\x2', 
		'\x2', '\x89', '\x8A', '\t', '\x2', '\x2', '\x2', '\x8A', '\x30', '\x3', 
		'\x2', '\x2', '\x2', '\x8B', '\x8D', '\t', '\x3', '\x2', '\x2', '\x8C', 
		'\x8B', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8E', '\x3', '\x2', '\x2', 
		'\x2', '\x8E', '\x8C', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8F', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', '\x2', '\x90', 
		'\x91', '\b', '\x19', '\x2', '\x2', '\x91', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\n', '\x2', 'o', 'r', 'v', '{', '\x81', '\x83', '\x8E', '\x3', 
		'\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
