//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Calculator.antlr4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICalculatorListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class CalculatorBaseListener : ICalculatorListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>add</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd([NotNull] CalculatorParser.AddContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>add</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd([NotNull] CalculatorParser.AddContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>skipAdd</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSkipAdd([NotNull] CalculatorParser.SkipAddContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>skipAdd</c>
	/// labeled alternative in <see cref="CalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSkipAdd([NotNull] CalculatorParser.SkipAddContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>mul</c>
	/// labeled alternative in <see cref="CalculatorParser.multiplyingExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMul([NotNull] CalculatorParser.MulContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>mul</c>
	/// labeled alternative in <see cref="CalculatorParser.multiplyingExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMul([NotNull] CalculatorParser.MulContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>skipMul</c>
	/// labeled alternative in <see cref="CalculatorParser.multiplyingExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSkipMul([NotNull] CalculatorParser.SkipMulContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>skipMul</c>
	/// labeled alternative in <see cref="CalculatorParser.multiplyingExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSkipMul([NotNull] CalculatorParser.SkipMulContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.powExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPowExpression([NotNull] CalculatorParser.PowExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.powExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPowExpression([NotNull] CalculatorParser.PowExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>plusAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.signedAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlusAtom([NotNull] CalculatorParser.PlusAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>plusAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.signedAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlusAtom([NotNull] CalculatorParser.PlusAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>minusAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.signedAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinusAtom([NotNull] CalculatorParser.MinusAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>minusAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.signedAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinusAtom([NotNull] CalculatorParser.MinusAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.signedAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncAtom([NotNull] CalculatorParser.FuncAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.signedAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncAtom([NotNull] CalculatorParser.FuncAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>atomAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.signedAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtomAtom([NotNull] CalculatorParser.AtomAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>atomAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.signedAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtomAtom([NotNull] CalculatorParser.AtomAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>scientificAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScientificAtom([NotNull] CalculatorParser.ScientificAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>scientificAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScientificAtom([NotNull] CalculatorParser.ScientificAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisAtom([NotNull] CalculatorParser.ParenthesisAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisAtom</c>
	/// labeled alternative in <see cref="CalculatorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisAtom([NotNull] CalculatorParser.ParenthesisAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.scientific"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScientific([NotNull] CalculatorParser.ScientificContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.scientific"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScientific([NotNull] CalculatorParser.ScientificContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.func_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_([NotNull] CalculatorParser.Func_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.func_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_([NotNull] CalculatorParser.Func_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalculatorParser.funcname"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncname([NotNull] CalculatorParser.FuncnameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalculatorParser.funcname"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncname([NotNull] CalculatorParser.FuncnameContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
